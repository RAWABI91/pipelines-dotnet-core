pipeline{
    agent any

    environment {
        AWS_ACCESS_KEY_ID = credentials('jenkins-aws-secret-key-id') 
        AWS_SECRET_ACCESS_KEY = credentials('jenkins-aws-secret-access-key')

        AWS_S3_BUCKET = "artifact-bucket-repo-roba"
        ARTIFACT_NAME = "hello-world.war"
        AWS_EB_APP_NAME = "java-webapp"
        AWS_EB_APP_VERSION = "${BUILD_ID}"
        AWS_EB_ENVIRONMENT = "Javawebapp-env-1"
        
        SONAR_IP = "54.226.50.200"
        SONAR_TOKEN = "sqp_1a4fe5b0b61df2df590643e317d11a333abea141"

    }
    stages {    
              stage('Restore packages'){
              steps{
                sh "dotnet restore"
                }
              }
              
              stage('Build'){
               steps{
                  sh "dotnet build "
                }
             } 
         stage('Test: Unit Test'){
               steps {
                 sh "dotnet test"
                 }
              } 

        stage('Quality Scan'){
            steps {
              sh '''
                dotnet sonarscanner begin /k:"Roba-Almehmadi--2" /d:sonar.host.url="http://$SONAR_IP"  /d:sonar.login="$SONAR_TOKEN" \
                dotnet build \
                dotnet sonarscanner end /d:sonar.login="$SONAR_TOKEN"
               '''

            }
        }

        stage('publish artefacts to  S3 Bucket') {
            steps {

                sh "aws configure set region us-east-1"
                sh "aws s3 cp ./target/**.war s3://$AWS_S3_BUCKET/$ARTIFACT_NAME"
                

            }
        }

            stage('Deploy') {
            steps {

                sh 'aws elasticbeanstalk create-application-version --application-name $AWS_EB_APP_NAME --version-label $AWS_EB_APP_VERSION --source-bundle S3Bucket=$AWS_S3_BUCKET,S3Key=$ARTIFACT_NAME'

                sh 'aws elasticbeanstalk update-environment --application-name $AWS_EB_APP_NAME --environment-name $AWS_EB_ENVIRONMENT --version-label $AWS_EB_APP_VERSION'
            }
        }
        
}
}